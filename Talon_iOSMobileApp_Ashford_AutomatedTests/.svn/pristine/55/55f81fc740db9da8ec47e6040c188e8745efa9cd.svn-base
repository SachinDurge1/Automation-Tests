package com.iosmobileapp.ashford.tests;


import java.io.IOException;
import java.util.Properties;









import org.testng.Assert;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import com.iosmobileapp.ashford.pages.ForgotPasswordPage;
import com.iosmobileapp.ashford.pages.HelpCenterPage;
import com.iosmobileapp.ashford.pages.HomePage;
import com.iosmobileapp.ashford.pages.LoginPage;
import com.iosmobileapp.ashford.pages.ThreeLineIconMenuPage;
import com.iosmobileapp.ashford.utilities.Appium;
import com.iosmobileapp.ashford.utilities.CommonMethods;
import com.iosmobileapp.ashford.utilities.GetResourceFileLocations;


// Unit Test for the Login Functionality in the application..
public class AT001_ValidateUserLogin 
{	

	// Set up to set the Configurations of the device..
	@BeforeTest
	public void setUp() throws Exception 
	{
		// Read the test data as the key and value pair from the text file..
		Properties prop = CommonMethods.readFile(GetResourceFileLocations.DEVICESETUP);

		// Set all the capabilities to the device..
		Appium.setUp(prop);

		// Handle the Alerts..
		CommonMethods.clickAlertPopUp();
	}

	// Test Method to verify the Functionality of the Login page.. 
	@Test
	public void test() throws IOException, InterruptedException
	{

		// Read the test data as key and values from the text file..
		Properties prop = CommonMethods.readFile(GetResourceFileLocations.CREDENTIALS);

		// Click on the "HelpCenter " icon in login Page..
		LoginPage.clickHelpCenterIcon();

		// Get the Existence of the "Help Center" header in the HelpCenter page.
		boolean isHelpCenter_Exists = HelpCenterPage.isHelpCenterHeader_Exists();

		// Assert to validate the "Help Center" header exists.
		Assert.assertTrue(isHelpCenter_Exists,"Expected Help Center header in Help center page; Actually not found");

		// Click on the "Back " icon in Help Center Page..
		CommonMethods.clickBackBtn();

		// Get the Existence of the "User name" field in the login page when click on back button in help center page..
		boolean isUserName_Exists = LoginPage.isUserNameField_Exists();

		// Assert to validate the "UserName" field exists.
		Assert.assertTrue(isUserName_Exists,"Expected UserName field in Login page; Actually not found");

		// Click on the "Forgot password " icon in login Page..
		LoginPage.clickForgotPasswordLink();

		// Get the Existence of the "Reset Password" header in the Forgot Password page..
		boolean isResetPassword_Exists = ForgotPasswordPage.isResetPassword_Exists();

		// Assert to validate the "Reset Password" header exists.
		Assert.assertTrue(isResetPassword_Exists,"Expected Reset Password headerdoes in Forgot Password page; Actually not found");

		// Click on the "Back " icon in Help Center Page..
		CommonMethods.clickBackBtn();

		// Get the Existence of the "UserName" field in the login page when click on back button in forgot password page..
		isUserName_Exists = LoginPage.isUserNameField_Exists();

		// Assert to validate the "User name" Element exists.
		Assert.assertTrue(isUserName_Exists,"Expected UserName field in Login page; Actually not found");

		// Enter the UserName into the "UserName" field in Login Page..
		LoginPage.enterUserName(prop.getProperty("UserName"));

		// Enter the Password into the "Password" field in Login Page..
		LoginPage.enterPassword(prop.getProperty("Password"));

		// Click on the "Sign In" button in Login Page..
		LoginPage.clickSignInBtn();

		// Get the Existence of the "Home" header in the home page..
		boolean isHome_exists = HomePage.isHomeHeader_Exists();

		// Assert to validate the signed successfully.
		Assert.assertTrue(isHome_exists,"Expected Home header in home page; Actually not found");
			
		//click on the "ThreeLineBar" field in Home Page..
		CommonMethods.threeLineBar();
		
		// Get the Existence of the "Home" Tab in the home page..
		boolean isHometab_exists = HomePage.isHomeHeader_Exists();

		// Assert to validate the signed successfully.
		Assert.assertTrue(isHometab_exists,"Expected Home tab in home page; Actually not found");
	}

	@AfterTest
	// Tear Down to close the driver instance.
	public void tearDown() throws Exception
	{		
		//Click on SignOut Link...
		ThreeLineIconMenuPage.clickSignOutLink();
		System.out.println("Closing the application...");
		Appium.driver.quit();

	}
}